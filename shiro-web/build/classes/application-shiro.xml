<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

   
     <!-- 配置SecurityManager! -->
    <bean  id="SecurityManager"  class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
       <!-- 缓存管理器  -->
       <property name="cacheManager"   ref="cacheManager" ></property>
        <!--Session 的管理方式 <property name="sessionMode" value="native"></property> -->
       <property name="realm" ref="jdbcRealm"></property>
    </bean>
    
    
     <!-- 缓存  可以用第三方  也可以用配置文件  -->
    <bean id="cacheManager"  class="org.apache.shiro.cache.ehcache.EhCacheManager">
             <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
    </bean>
    <!-- 配置Realm  直接配置实现Realm接口的bean -->
    <bean id="jdbcRealm"  class="com.shiro.realms.ShiroRealm">
       <!-- 配置MD5加密  credentials 证书   Matcher 匹配器  凭证匹配器-->
       <property name="credentialsMatcher">
         <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
            <!-- 指定加密算法 -->
            <property name="hashAlgorithmName" value="MD5"></property>
            <!-- 指定加密次数 -->
            <property name="hashIterations" value="1024"></property>
         </bean>
       </property>
    </bean>
    
    <!-- 配置 LifecycleBeanPostProcessor  可以自定的来调用 在Spring IOC 容器中shiro bean 的生命周期方法-->
    <bean id="lifecycleBeanPostProcessor"  class="org.apache.shiro.spring.LifecycleBeanPostProcessor">  </bean>
   
    <!-- 启用IOC 容器中使用shiro 的注解 但是 必须配置了lifecycleBeanPostProcessor 之后才可以使用  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"></bean> 
   
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"> 
        <property name="securityManager" ref="SecurityManager"></property>
    </bean >
      <!-- 配置Shiro Filter  
         1.Id 必须和web.xml 文件中配置的DelegatingFilterProxy 中 name 一致
      -->
    <bean id="shiroFilter"  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
      <property name="securityManager"  ref="SecurityManager"/>
      <!-- 登陆页面   -->
      <property name="loginUrl" value="/login.jsp"/>
      <!-- 成功  -->
      <property name="successUrl" value="/list.jsp"></property>
      <!-- 未被授权的页面 -->
      <property name="unauthorizedUrl" value="/unauthorized.jsp"></property>
       <!-- 配置那些页面需要受保护  以及访问这些页面需要的权限
         1. anon  可以匿名访问
         2.authc 必须认证后才能访问  登录
        -->
      <property name="filterChainDefinitions">
          <value>
                /login.jsp = anon
                /user.jsp = anon
                /shiro/login = anon
                             #登出 
                /shiro/loginout = logout
                                   #这是注释 
                /* = authc
          </value>
      </property>
    </bean>
    
</beans>
